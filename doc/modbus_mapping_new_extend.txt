modbus_mapping_new_extend(3)
=====================


NAME
----
modbus_mapping_new_extend - allocate four arrays of bits and registers and file records


SYNOPSIS
--------
*modbus_mapping_t* modbus_mapping_new_extend(int 'nb_bits', int 'nb_input_bits', int 'nb_registers', int 'nb_input_registers', uint16_t nb_file_register[MODBUS_MAX_RECORD_FILESMODBUS_MAX_RECORD_FILES]);*


DESCRIPTION
-----------
The *modbus_mapping_new_extend()*  calls linkmb:modbus_mapping_new[3] and additionally allocates up to 
MODBUS_MAX_RECORD_FILES (current specification limit it to 10) arrays for file records.

Each _value_ in the array, which is not 0 allocates _value_ registers in the file of _index_ -1 .
( The file registers start with "1" for the first file ) 

RETURN VALUE
------------
The function shall return the new allocated structure if successful. Otherwise
it shall return NULL and set errno.


ERRORS
------
*ENOMEM*::
Not enough memory


EXAMPLE
-------
[source,c]
-------------------
/* The first value of each array is accessible from the 0 address. */
mb_mapping = modbus_mapping_new_extend(BITS_ADDRESS + BITS_NB,
                                INPUT_BITS_ADDRESS + INPUT_BITS_NB,
                                REGISTERS_ADDRESS + REGISTERS_NB,
                                INPUT_REGISTERS_ADDRESS + INPUT_REGISTERS_NB,
                                FILE_REGISTERS_NB[MODBUS_MAX_RECORD_FILES]);
if (mb_mapping == NULL) {
    fprintf(stderr, "Failed to allocate the mapping: %s\n",
            modbus_strerror(errno));
    modbus_free(ctx);
    return -1;
}
-------------------

SEE ALSO
--------
linkmb:modbus_mapping_new[3]
linkmb:modbus_mapping_free[3]
linkmb:modbus_mapping_new_start_address[3]


AUTHORS
-------
The libmodbus documentation was written by St√©phane Raimbault
<stephane.raimbault@gmail.com>
